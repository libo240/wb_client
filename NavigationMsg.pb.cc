// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NavigationMsg.proto

#include "NavigationMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace navigation {
class NavigationMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NavigationMsg>
      _instance;
} _NavigationMsg_default_instance_;
}  // namespace navigation
namespace protobuf_NavigationMsg_2eproto {
void InitDefaultsNavigationMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::navigation::_NavigationMsg_default_instance_;
    new (ptr) ::navigation::NavigationMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::navigation::NavigationMsg::InitAsDefaultInstance();
}

void InitDefaultsNavigationMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNavigationMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::navigation::NavigationMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::navigation::NavigationMsg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::navigation::NavigationMsg, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::navigation::NavigationMsg, binarydata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::navigation::NavigationMsg, textdata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::navigation::NavigationMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::navigation::_NavigationMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "NavigationMsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023NavigationMsg.proto\022\nnavigation\"P\n\rNav"
      "igationMsg\022\013\n\003key\030\001 \001(\t\022\014\n\004uuid\030\002 \001(\t\022\022\n"
      "\nbinaryData\030\003 \001(\014\022\020\n\010textData\030\004 \001(\tb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 123);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NavigationMsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_NavigationMsg_2eproto
namespace navigation {

// ===================================================================

void NavigationMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NavigationMsg::kKeyFieldNumber;
const int NavigationMsg::kUuidFieldNumber;
const int NavigationMsg::kBinaryDataFieldNumber;
const int NavigationMsg::kTextDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NavigationMsg::NavigationMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NavigationMsg_2eproto::InitDefaultsNavigationMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:navigation.NavigationMsg)
}
NavigationMsg::NavigationMsg(const NavigationMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  binarydata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binarydata().size() > 0) {
    binarydata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binarydata_);
  }
  textdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.textdata().size() > 0) {
    textdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.textdata_);
  }
  // @@protoc_insertion_point(copy_constructor:navigation.NavigationMsg)
}

void NavigationMsg::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binarydata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  textdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NavigationMsg::~NavigationMsg() {
  // @@protoc_insertion_point(destructor:navigation.NavigationMsg)
  SharedDtor();
}

void NavigationMsg::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binarydata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  textdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NavigationMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NavigationMsg::descriptor() {
  ::protobuf_NavigationMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NavigationMsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NavigationMsg& NavigationMsg::default_instance() {
  ::protobuf_NavigationMsg_2eproto::InitDefaultsNavigationMsg();
  return *internal_default_instance();
}

NavigationMsg* NavigationMsg::New(::google::protobuf::Arena* arena) const {
  NavigationMsg* n = new NavigationMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NavigationMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:navigation.NavigationMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binarydata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  textdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NavigationMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:navigation.NavigationMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "navigation.NavigationMsg.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uuid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "navigation.NavigationMsg.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes binaryData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_binarydata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string textData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_textdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->textdata().data(), static_cast<int>(this->textdata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "navigation.NavigationMsg.textData"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:navigation.NavigationMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:navigation.NavigationMsg)
  return false;
#undef DO_
}

void NavigationMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:navigation.NavigationMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "navigation.NavigationMsg.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "navigation.NavigationMsg.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uuid(), output);
  }

  // bytes binaryData = 3;
  if (this->binarydata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->binarydata(), output);
  }

  // string textData = 4;
  if (this->textdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->textdata().data(), static_cast<int>(this->textdata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "navigation.NavigationMsg.textData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->textdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:navigation.NavigationMsg)
}

::google::protobuf::uint8* NavigationMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:navigation.NavigationMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "navigation.NavigationMsg.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "navigation.NavigationMsg.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uuid(), target);
  }

  // bytes binaryData = 3;
  if (this->binarydata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->binarydata(), target);
  }

  // string textData = 4;
  if (this->textdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->textdata().data(), static_cast<int>(this->textdata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "navigation.NavigationMsg.textData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->textdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:navigation.NavigationMsg)
  return target;
}

size_t NavigationMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:navigation.NavigationMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // bytes binaryData = 3;
  if (this->binarydata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->binarydata());
  }

  // string textData = 4;
  if (this->textdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->textdata());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NavigationMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:navigation.NavigationMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NavigationMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NavigationMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:navigation.NavigationMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:navigation.NavigationMsg)
    MergeFrom(*source);
  }
}

void NavigationMsg::MergeFrom(const NavigationMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:navigation.NavigationMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.binarydata().size() > 0) {

    binarydata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binarydata_);
  }
  if (from.textdata().size() > 0) {

    textdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.textdata_);
  }
}

void NavigationMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:navigation.NavigationMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NavigationMsg::CopyFrom(const NavigationMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:navigation.NavigationMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NavigationMsg::IsInitialized() const {
  return true;
}

void NavigationMsg::Swap(NavigationMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NavigationMsg::InternalSwap(NavigationMsg* other) {
  using std::swap;
  key_.Swap(&other->key_);
  uuid_.Swap(&other->uuid_);
  binarydata_.Swap(&other->binarydata_);
  textdata_.Swap(&other->textdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NavigationMsg::GetMetadata() const {
  protobuf_NavigationMsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NavigationMsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace navigation

// @@protoc_insertion_point(global_scope)
